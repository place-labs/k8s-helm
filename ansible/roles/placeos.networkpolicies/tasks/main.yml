---
- name: patch the placeos ns with a label
  community.kubernetes.k8s:
    state: present
    name: "{{ placeos_namespace }}"
    api_version: v1
    kind: Namespace
    definition:
      metadata:
        labels:
          networking/namespace: "{{ placeos_namespace }}"

#- name: patch the placeos ns with a label
#  community.kubernetes.k8s:
#    state: present
#    name: "{{ ingress_namespace }}"
#    api_version: v1
#    kind: Namespace
#    definition:
#      metadata:
#        labels:
#          networking/namespace: "{{ ingress_namespace }}"

- name: patch the ingress pod with allow-external label
  community.kubernetes.k8s:
    state: present
    name: "{{ ingress_deployment }}"
    api_version: v1
    kind: Deployment
    namespace: "{{ ingress_namespace }}"
    definition:
      spec:
        template:
          metadata:
            labels:
              networking/allow-external-access: "true"

- name: service for dispatch
  community.kubernetes.k8s:
    state: "{{ policy_state }}"
    namespace: "{{ placeos_namespace }}"
    definition: "{{ lookup('template', 'allow-external.yaml') | from_yaml }}"

- name: allow load balancer and deny gcp private IP range to placeos
  community.kubernetes.k8s:
    state: "{{ policy_state }}"
    namespace: "{{ placeos_namespace }}"
    definition: "{{ lookup('template', 'allow-gcp-lb.yaml') | from_yaml }}"
  when: gke is defined

# tasks file for placeos.networkpolicies
#- name: placeos ns to service ns
#  community.kubernetes.k8s:
#    state: "{{ policy_state }}"
#    namespace: "{{ ns }}"
#    definition: "{{ lookup('template', 'placeos-to-namespace.yaml') | from_yaml }}"
#  loop:
#    "{{ placeos_to_ns }}"
#  loop_control:
#    loop_var: "ns"

- name: pod to pod in same ns
  community.kubernetes.k8s:
    state: "{{ policy_state }}"
    namespace: "{{ ns }}"
    definition: "{{ lookup('template', 'allow-same-namespace.yaml') | from_yaml }}"
  loop:
    "{{ internal_ns }}"
  loop_control:
    loop_var: "ns"

- name: deny all
  community.kubernetes.k8s:
    state: "{{ policy_state }}"
    namespace: "{{ ns }}"
    definition: "{{ lookup('template', 'deny-all.yaml') | from_yaml }}"
  loop:
    "{{ internal_ns }}"
  loop_control:
    loop_var: "ns"
  when: gke is not defined

- name: ingress access to upstream apps
  community.kubernetes.k8s:
    state: "{{ policy_state }}"
    namespace: "{{ placeos_namespace }}"
    definition: "{{ lookup('template', 'ingress-to-placeos.yaml') | from_yaml }}"
  when: gke is not defined
