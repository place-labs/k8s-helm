#  Used to set the user password in PostgresQL if enabled then passed to multiple containers in a k8s secret
xpostgresPassword: &pgPassword "{{ postgresqlPassword }}"

#  Used to set the admin "postgres" user password in PostgresQL if enabled
xpostgresPostgresPassword: &pgPostgresPassword "{{ postgresqlPostgresPassword }}"

# xsmtpPassword. the smtp password used by triggers
xsmtpPassword: &smtpPassword "{{ smtpPassword | default( '', true ) }}"

# xplacePassword. The value used by the init subchart to set the default domain users password
xplacePassword: &placePassword "{{ placePassword | default( '', true ) }}"

# xplaceServerSecret for the placeos service
xplaceServerSecret: &placeServerSecret "{{ placeServerSecret | default( '', true ) }}"

# xplaceServerSecret for the placeos service
xauthSecretKeyBase: &authSecretKeyBase "{{ authSecretKeyBase | default( '', true ) }}"

# xserverSecret for the dispatch service
xserverSecret: &serverSecret "{{ serverSecret | default( '', true ) }}"

# xelasticClientEnv configmap values for ElasticSearch Service exposed as environment variables to PlaceOS containers
xelasticClientEnv: &elasticClientEnv
  ES_HOST: "{{ elasticsearch_release_name }}.{{ elasticsearch_namespace }}"
  ES_PORT: 9200

# xetcdClientEnv configmap values for Etcd end point Service as environment variables to PlaceOS containers
xetcdClientEnv: &etcdClientEnv
  ETCD_HOST: "etcd-headless.{{ etcd_namespace }}"
  ETCD_PORT: 2379

# xredisClientEnv configmap values for the redis Service exposed as environment variables to PlaceOS containers
xredisClientEnv: &redisClientEnv
  REDIS_URL: "redis://redis-headless.{{ redis_namespace }}:6379"

xpostgresValues: &postgresValues
  postgresql:
    username: &pgUsername placeos
    database: &pgDatabase placeos
    password: *pgPassword
    postgresPassword: *pgPostgresPassword
    maxConnections: 500
  pgpool:
    numInitChildren: 500

xpostgresClientEnv: &postgresClientEnv
  PG_DB: *pgDatabase
  PG_HOST: postgresql-pgpool
  PG_PORT: 5432
  PG_USER: *pgUsername
  PG_QUERY: "?initial_pool_size=10&max_idle_pool_size=10"

xpostgresClientSecrets: &postgresClientSecrets
  PG_PASSWORD: *pgPassword

xinfluxClientEnv: &influxClientEnv
  INFLUX_HOST: http://influx:8086
  INFLUX_ORG: PlaceOS
  INFLUX_BUCKET: placeos

xinfluxAdminToken: &influxAdminToken "{{ influxdbAdminToken }}"

xinfluxClientEnv: &influxClientEnv
  INFLUX_HOST: http://influx:8086
  INFLUX_ORG: PlaceOS
  INFLUX_BUCKET: placeos

xinfluxAdminToken: &influxAdminToken "{{ influxdbAdminToken }}"

# xsmtpClientSecrets secrets values exposed as environment variables for the trigger service
xsmtpClientSecrets: &smtpClientSecrets
  SMTP_PASS: *smtpPassword

# dispatchSecrets secret values exposed as environment variables for the dispatch service
xdispatchSecrets: &dispatchSecrets
  SERVER_SECRET: *serverSecret

placeos:
  enabled: true
  # api is the overide configuration for the embedded api subchart
  api:
    ingress:
      enabled: false
      annotations:
        kubernetes.io/ingress.class: nginx
        ingress.kubernetes.io/ssl-redirect: "true"
    configmap:
      # Service Hosts
      << : *elasticClientEnv
      << : *etcdClientEnv
      << : *redisClientEnv
      << : *postgresClientEnv
    secrets:
      << : *postgresClientSecrets
      PLACE_SERVER_SECRET: *placeServerSecret
    deployment:
      resources:
        limits:
          cpu: 100m
          memory: 500Mi
        requests:
          cpu: 10m
          memory: 50Mi
  # auth is the overide configuration for the embedded auth subchart
  auth:
    ingress:
      enabled: false
      annotations:
        kubernetes.io/ingress.class: nginx
        ingress.kubernetes.io/ssl-redirect: "true"
    configmap:
      << : *postgresClientEnv
    secrets:
      SECRET_KEY_BASE: *authSecretKeyBase
      << : *postgresClientSecrets
    deployment:
      resources:
        limits:
          cpu: 1
          memory: 500Mi
        requests:
          cpu: 10m
          memory: 400Mi
  # core is the overide configuration for the embedded core subchart
  core:
    configmap:
      # Service Hosts
      << : *etcdClientEnv
      << : *redisClientEnv
      << : *postgresClientEnv
    secrets:
      << : *postgresClientSecrets
      PLACE_SERVER_SECRET: *placeServerSecret
    deployment:
      resources:
        limits:
          cpu: 1
          memory: 4Gi
        requests:
          cpu: 1
          memory: 4Gi
  # dispatch is the overide configuration for the embedded dispatch subchart
  dispatch:
    udpLoadbalancer:
      annotations:
        cloud.google.com/load-balancer-type: "Internal"
    tcpLoadbalancer:
      annotations:
        cloud.google.com/load-balancer-type: "Internal"
    secrets:
      << : *dispatchSecrets
    deployment:
      resources:
        requests:
          cpu: 10m
          memory: 5Mi
  # frontend-loader is the overide configuration for the embedded frontend-loader subchart
  frontendloader:
    httpSidecar: false
    ingress:
      enabled: false
      annotations:
        kubernetes.io/ingress.class: nginx
        ingress.kubernetes.io/ssl-redirect: "true"
    configmap:
      << : *postgresClientEnv
    secrets:
      << : *postgresClientSecrets
      PLACE_SERVER_SECRET: *placeServerSecret
    persistentVolume:
      name: www
      accessModes:
        - ReadWriteOnce
    deployment:
      resources:
        limits:
          cpu: 500m
          memory: 500Mi
        requests:
          cpu: 500m
          memory: 500Mi
    httpDeployment:
      resources:
        limits:
          cpu: 50m
          memory: 100Mi
        requests:
          cpu: 50m
          memory: 100Mi
  # search-ingest is the overide configuration for the embedded search-ingest subchart
  searchingest:
    configmap:
      # Service Hosts
      << : *postgresClientEnv
      << : *elasticClientEnv
    secrets:
      << : *postgresClientSecrets
    deployment:
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
  # triggers is the overide configuration for the embedded triggers subchart
  triggers:
    configmap:
      # Service Hosts
      << : *etcdClientEnv
      << : *redisClientEnv
      << : *postgresClientEnv
    secrets:
      << : *postgresClientSecrets
      << : *smtpClientSecrets
      PLACE_SERVER_SECRET: *placeServerSecret
    deployment:
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
  # init is the overide configuration for the embedded init subchart
  init:
    config:
      # Service Hosts
      << : *postgresClientEnv
      << : *elasticClientEnv
    secrets:
      PLACE_PASSWORD: *placePassword
      PLACE_SERVER_SECRET: *placeServerSecret
      << : *postgresClientSecrets
  # staff is the overide configuration for the embedded staff subchart
  staff:
    ingress:
      enabled: false
      annotations:
        kubernetes.io/ingress.class: nginx
        ingress.kubernetes.io/ssl-redirect: "true"
    configmap:
      << : *postgresClientEnv
    secrets:
      PLACE_PASSWORD: *placePassword
      PLACE_SERVER_SECRET: *placeServerSecret
      << : *postgresClientSecrets
    deployment:
      resources:
        limits:
          cpu: 25m
          memory: 1Gi
        requests:
          cpu: 10m
          memory: 50Mi
  # source is the overide configuration for the embedded source subchart
  source:
    configmap:
      << : *etcdClientEnv
      << : *redisClientEnv
      << : *postgresClientEnv
      << : *influxClientEnv
    secrets:
      << : *postgresClientSecrets
      PLACE_SERVER_SECRET: *placeServerSecret
      INFLUX_API_KEY: *influxAdminToken
    serviceAccount:
      name: null
  global:
    placeDomain: "{{ placeDomain | default('localhost', true ) }}"
    customRedirectPort: "{{ customRedirectPort | default( omit ) }}"
    gcpbackendConfig:
      enabled: true
      name: placeos-core
      config:
        connectionDraining:
          drainingTimeoutSec: 60
        securityPolicy:
          name: "cloudarmor-policy"
      global_static_ip_name: "l7-ip"
      loadbalancerAccessType: "External"

###########################################
##### Third Party Supporting Services #####
###########################################

ingress-nginx:
  enabled: false
  fullnameOverride: "ingress-nginx"
etcd:
  fullnameOverride: etcd
  enabled: true
  auth:
    rbac:
      create: false
    token:
      enabled: false
  replicaCount: 3
  persistence:
    enabled: true
    size: 500M
elasticsearch:
  enabled: true
  master:
    replicaCount: 1
    persistence:
      enabled: true
      size: 100M
  data:
    replicaCount: 1
    persistence:
      enabled: true
      size: 500M
    resources:
      requests:
        cpu: 25m
        memory: 2Gi
  coordinating:
    replicaCount: 0
  ingest:
    replicaCount: 0
redis:
  enabled: true
  fullnameOverride: redis
  auth:
    enabled: false
  architecture: standalone
  commonConfiguration: |-
    notify-keyspace-events Kg$
  master:
    persistence:
      enabled: true
      size: 100M
influxdb:
  fullnameOverride: influxdb
  enabled: true
  auth:
    admin:
      token: *influxAdminToken
mosquitto:
  enabled: false
  fullnameOverride: mosquitto
postgresql-ha:
  enabled: true
  fullnameOverride: postgresql
  << : *postgresValues
