# -- Default values for the placeos umbrella chart.


###############################
##### Configmap Variable ######
###############################
# -- yaml anchor for the user password for postgres.
# Used to set the user password in postgres if enabled then passed to multiple containers in a k8s secret
xpostgresPassword: &pgPassword "development"

# -- yaml anchor for the admin password for postgres.
# Used to set the admin ("postgres" user) password in postgres if enabled
xpostgresPostgresPassword: &pgPostgresPassword "development"

# -- yaml anchor for the smtp password used by triggers
xsmtpPassword: &smtpPassword ""

# -- yaml anchor . The value used by the init subchart to set the default domain users password
xplacePassword: &placePassword "development"

# -- yaml anchor for the dispatch service
xserverSecret: &serverSecret "development"

# -- yaml anchor the local time zone for the deployment
xtz: &TZ Australia/Sydney

# -- yaml anchor the spider-gazelle environment for the deployment
xsgEnv: &sgEnv "production"

# -- yaml anchor for the initial user email for the deployment
xplaceEmail: &placeEmail "support@place.tech"

xdeploymentEnv: &deploymentEnv
  # -- configmap value exposed as environment variables to PlaceOS containers
  ENV: production
  # -- configmap value exposed as environment variables to PlaceOS containers
  SG_ENV: *sgEnv
  # -- configmap value exposed as environment variables to PlaceOS containers
  TZ: *TZ

xelasticClientEnv: &elasticClientEnv
  # -- configmap value for ElasticSearch Service exposed as environment variables to PlaceOS containers
  ES_HOST: elasticsearch-master
  # -- configmap value for ElasticSearch Service exposed as environment variables to PlaceOS containers
  ES_PORT: 9200

xplaceLoaderClientEnv: &placeLoaderClientEnv
  # -- configmap value for the frontend Service exposed as environment variables to PlaceOS containers
  PLACE_LOADER_URI: http://frontend-loader:3000

xredisClientEnv: &redisClientEnv
  # -- configmap value for the redis Service exposed as environment variables to PlaceOS containers
  REDIS_URL: redis://redis-headless:6379

xrubberSoulClientEnv: &rubberSoulClientEnv
  # -- configmap value for the Rubber Soul service exposed as environment variables to PlaceOS containers
  RUBBER_SOUL_URI: http://search-ingest:3000

xsmtpClientEnv: &smtpClientEnv
  # -- configmap value for the SMTP server exposed as environment variables for the trigger service
  SMTP_SERVER: ""
  # -- configmap value for the SMTP server exposed as environment variables for the trigger service
  SMTP_PORT: 587
  # -- configmap value for the SMTP server exposed as environment variables for the trigger service
  SMTP_USER: ""
  # -- configmap value for the SMTP server exposed as environment variables for the trigger service
  SMTP_SECURE: ""

xinitConfigEnv: &initConfigEnv
  # -- configmap value for the initialisation job exposed as environment variables for the init subchart
  PLACE_APPLICATION: backoffice
  # -- configmap value for the initialisation job exposed as environment variables for the init subchart
  PLACE_AUTH_HOST: auth:3000
  # -- configmap value for the initialisation job exposed as environment variables for the init subchart
  PLACE_USERNAME: "Place Support"
  # -- configmap value for the initialisation job exposed as environment variables for the init subchart
  PLACE_EMAIL: *placeEmail
  # -- configmap value for the initialisation job exposed as environment variables for the init subchart
  PLACE_TLS: true

xsmtpClientSecrets: &smtpClientSecrets
  # --  secrets value exposed as environment variables for the trigger service
  SMTP_PASS: *smtpPassword

xdispatchSecrets: &dispatchSecrets
  # -- secrets value exposed as environment variables for the dispatch service
  SERVER_SECRET: *serverSecret

xpostgresValues: &postgresValues
  postgresql:
    username: &pgUsername placeos
    database: &pgDatabase placeos
    password: *pgPassword
    postgresPassword: *pgPostgresPassword
    maxConnections: 500
    replicaCount: 1
  pgpool:
    numInitChildren: 500
    replicaCount: 0

xpostgresClientEnv: &postgresClientEnv
  PG_DB: *pgDatabase
  PG_HOST: postgresql-postgresql
  PG_PORT: 5432
  PG_USER: *pgUsername
  PG_QUERY: "?initial_pool_size=10&max_idle_pool_size=10"

xpostgresClientSecrets: &postgresClientSecrets
  PG_PASSWORD: *pgPassword

xinfluxClientEnv: &influxClientEnv
  INFLUX_HOST: http://influx:8086
  INFLUX_ORG: PlaceOS
  INFLUX_BUCKET: placeos

#####################################
##### -- PlaceOS Service SubCharts #####
#####################################

# api is the overide configuration for the embedded api subchart
api:
  # -- api is a core PlaoceOS chart enabled by default.
  enabled: true
  fullnameOverride: api
  configmap:
    << : *deploymentEnv
    << : *elasticClientEnv
    << : *placeLoaderClientEnv
    << : *redisClientEnv
    << : *postgresClientEnv
    << : *rubberSoulClientEnv
  secrets:
    << : *postgresClientSecrets
  deployment:
    resources:
      limits:
        cpu: 100m
        memory: 500Mi
      requests:
        cpu: 10m
        memory: 100Mi
# auth is the overide configuration for the embedded auth subchart
auth:
 # -- auth is a core PlaoceOS chart enabled by default.
  enabled: true
  fullnameOverride: auth
  configmap:
    << : *postgresClientEnv
    COAUTH_NO_SSL: "false"
    TZ: *TZ
  secrets:
    << : *postgresClientSecrets
  deployment:
    resources:
      limits:
        cpu: 1
        memory: 500Mi
      requests:
        cpu: 10m
        memory: 400Mi
# core is the overide configuration for the embedded core subchart
core:
  # -- core is a core PlaoceOS chart enabled by default.
  enabled: true
  fullnameOverride: core
  configmap:
    << : *redisClientEnv
    << : *postgresClientEnv
    << : *deploymentEnv
  secrets:
    << : *postgresClientSecrets
  deployment:
    resources:
      limits:
        cpu: 1
        memory: 2Gi
      requests:
        cpu: 1
        memory: 2Gi
# dispatch is the overide configuration for the embedded dispatch subchart
dispatch:
  # -- dispatch is a core PlaoceOS chart enabled by default.
  enabled: true
  fullnameOverride: dispatch
  secrets:
    << : *dispatchSecrets
  deployment:
    resources:
      requests:
        cpu: 10m
        memory: 5Mi
# frontend-loader is the overide configuration for the embedded frontend-loader subchart
frontendloader:
  # -- frontend-loader is a core PlaoceOS chart enabled by default.
  enabled: true
  httpSidecar: true
  fullnameOverride: frontend-loader
  configmap:
    # -- path to static html resources
    PLACE_LOADER_WWW: www
    << : *postgresClientEnv
    << : *deploymentEnv
  secrets:
    << : *postgresClientSecrets
  deployment:
    resources:
      limits:
        cpu: 500m
        memory: 500Mi
      requests:
        cpu: 500m
        memory: 500Mi
  httpDeployment:
    resources:
      limits:
        cpu: 50m
        memory: 100Mi
      requests:
        cpu: 50m
        memory: 100Mi
# search-ingest is the overide configuration for the embedded search-ingest subchart
searchingest:
  # -- search-ingest is a core PlaoceOS chart enabled by default.
  enabled: true
  fullnameOverride: search-ingest
  configmap:
    << : *postgresClientEnv
    << : *elasticClientEnv
    << : *deploymentEnv
  secrets:
    << : *postgresClientSecrets
  deployment:
    resources:
      requests:
        cpu: 10m
        memory: 50Mi
# triggers is the overide configuration for the embedded triggers subchart
triggers:
  # -- triggers is a core PlaoceOS chart enabled by default.
  enabled: true
  fullnameOverride: triggers
  configmap:
    << : *redisClientEnv
    << : *postgresClientEnv
    << : *smtpClientEnv
    << : *deploymentEnv
  secrets:
    << : *postgresClientSecrets
    << : *smtpClientSecrets
  deployment:
    resources:
      requests:
        cpu: 10m
        memory: 50Mi
# init is the overide configuration for the embedded init subchart
init:
  # -- init is a core PlaoceOS chart enabled by default.
  enabled: true
  fullnameOverride: init
  config:
    PG_FORCE_RESTORE: false
    << : *initConfigEnv
    << : *postgresClientEnv
    << : *elasticClientEnv
    << : *deploymentEnv
  secrets:
    << : *postgresClientSecrets
    # -- Default password for initial users in domain
    PLACE_PASSWORD: *placePassword
# staff is the overide configuration for the embedded staff subchart
staff:
  # -- staff is an optional PlaoceOS chart enabled by default.
  enabled: true
  fullnameOverride: staff
  << : *postgresValues
  configmap:
    << : *postgresClientEnv
    PLACE_EMAIL: *placeEmail
    SG_ENV: *sgEnv
    STAFF_TIME_ZONE: *TZ
  secrets:
    << : *postgresClientSecrets
    PLACE_PASSWORD: *placePassword
  deployment:
    resources:
      limits:
        cpu: 500m
        memory: 500Mi
      requests:
        cpu: 10m
        memory: 100Mi

source:
  enabled: true
  fullnameOverride: source
  configmap:
    << : *redisClientEnv
    << : *postgresClientEnv
    << : *influxClientEnv
    << : *deploymentEnv
  secrets:
    << : *postgresClientSecrets
  serviceAccount:
    name: null

###########################################
##### -- Third Party Supporting Services #####
###########################################

# These charts are not part of the PlaceOS core platform and are provided for development and PoC purposes.
# They are configured to run with minimal resource usage. Review the individual chart documentation and
# deploy seperately for a more robust solution.
# elasticsearch third party chart overrides
elasticsearch:
  # -- elasticsearch chart disabled by default. included for testing purposes only
  enabled: false
  templateOverrides:
  # -- templateOverrides. A work around to override the full name of the ElasticSearch master. See templates/_helpers.tpl
    elasticsearchMasterfullName: elasticsearch-master
  master:
    replicaCount: 1
    persistence:
      enabled: true
      size: 100M
  data:
    replicaCount: 1
    persistence:
      enabled: true
      size: 500M
    resources:
      requests:
        cpu: 25m
        memory: 1536Mi
  coordinating:
    replicaCount: 0
  ingest:
    replicaCount: 0
# redis third party chart overrides
redis:
  # -- redis chart disabled by default. included for testing purposes only
  enabled: false
  fullnameOverride: redis
  auth:
    enabled: false
  architecture: standalone
  commonConfiguration: |-
    notify-keyspace-events Kg$
  master:
    persistence:
      enabled: true
      size: 100M
    limits:
      cpu: '1'
      ephemeral-storage: 1Gi
      memory: 192Mi
    requests:
      cpu: 100m
      ephemeral-storage: 50Mi
      memory: 128Mi
# influxdb third party chart overrides
influxdb:
  # influxdb chart disabled by default. included for testing purposes only
  enabled: false
  fullnameOverride: influxdb
# mosquitto third party chart overrides
mosquitto:
  # -- mosquitto chart disabled by default. included for testing purposes only
  enabled: false
  fullnameOverride: mosquitto
# postgres third party chart overrides
postgresql:
  # -- postgres chart disabled by default. included for testing purposes only
  enabled: false
  fullnameOverride: postgres
  << : *postgresValues

global:
  #placeDomain the initial PlaceOS domain. Used by the init service to configure the appropriate domain services
  placeDomain: null
  # -- customRedirectPort the port the API and Frontend services are listening on. Leave as null if using standard ports. ie 80 or 443.
  # Used by the init service to configure the appropriate services
  customRedirectPort: null
  gcpbackendConfig:
    # -- gcpbackendConfig Create a GCP specific CustomResourceDefinition `BackendConfig` to enable a customisable L7 loabalancer instead of Nginx TCP loadbalancer
    # See https://cloud.google.com/kubernetes-engine/docs/how-to/ingress-features
    enabled: false
    # -- the name of the BackendConfig Custom Resource
    name: placeos-core
    # -- yaml configuration for the BackendConfig
    config: {}
      # Example of attaching GCP CloudArmor to  the BackendConfig
      # securityPolicy: 
      #   name: "test"
    # -- The name of the GCP static IP to attach the HTTP load balancer to
    global_static_ip_name: "l7-ip"
    # -- The type of load lalancer. External or Internal
    loadbalancerAccessType: "External"
